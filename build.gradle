buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.0' apply false
    id 'io.freefair.lombok' version '5.3.0' apply false
}

subprojects {

    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'java-library'
    apply plugin: 'jacoco'
    apply plugin: 'idea'

    apply from: "$rootDir/gradle/jacoco.gradle"
    apply from: "$rootDir/gradle/publish.gradle"

    if (project.hasProperty("local_script")) {
        apply from: file(local_script + "/build.local.gradle")
    }

    sourceCompatibility = 11
    targetCompatibility = 11

    group project.property("group")

    compileJava {
        options.encoding = 'UTF-8'
        options.compilerArgs += ["-parameters"]
        options.fork = true
        options.forkOptions.executable = 'javac'
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url = 'https://jitpack.io' }
    }

    dependencies {
        //Test dependencies
        testImplementation 'org.junit.jupiter:junit-jupiter:5.+'
        testImplementation "org.mockito:mockito-core:3.+"
        testImplementation 'org.assertj:assertj-core:3.+'
    }

    shadowJar {
        classifier = ''
        dependencies {
            include(dependency('com.google.guava:guava:'))
            include(dependency('org.apache.commons:commons-lang3:'))
            include(dependency('org.reflections:reflections:'))
        }
        relocate 'org.apache.commons', "shadow.net.silthus.net.silthus.configmapper.commonslang"
        relocate 'com.google', "shadow.net.silthus.net.silthus.configmapper.guava"
        relocate 'org.reflections', "shadow.net.silthus.net.silthus.configmapper.reflections"
    }

    tasks.build.dependsOn(shadowJar)
    tasks.publish.dependsOn(shadowJar)

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
        ignoreFailures = false
    }

    processResources {
        project.properties.put("version", this.version)
        expand project.properties
    }

    defaultTasks 'build'
}